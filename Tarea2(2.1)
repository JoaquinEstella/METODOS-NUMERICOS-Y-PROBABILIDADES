{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "0ac5e786",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[[1. 2.]\n",
      " [3. 4.]\n",
      " [5. 6.]]\n"
     ]
    }
   ],
   "source": [
    "#Tarea 2.1: Escriba un c√≥digo que tome un arreglo lleno de ceros producido con np.zeros((3,2)) \n",
    "A = np.zeros([3,2])\n",
    "#y usando ciclos for lo llena para obtener una matriz del 1 al 6 intercaladamente con el mismo numero de filas y columnas\n",
    "\n",
    "#Solucion bajo las herramientas que logre entender mediante clases y estudio propio:\n",
    "#lo mas factible fue definir la matriz como un arreglo mediante el comando ravel:\n",
    "B = np.ravel(A) # De esta manera puedo sumar consecuentementede forma mas facil hasta el 6\n",
    "for i in range(6):\n",
    "    a = i+1\n",
    "    B[i]=a\n",
    "C = B.reshape([3,2]) #Defino C como el cambio nuevamente a matriz del arreglo modificado\n",
    "print(C) #Y finalmente corro el codigo\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "832f2d35",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
